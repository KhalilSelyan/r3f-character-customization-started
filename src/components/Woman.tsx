/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/woman.gltf -t 
*/

import * as THREE from "three";
import { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useCharacterAnimations } from "../hooks/useCharacterAnimations";

type GLTFResult = GLTF & {
  nodes: {
    Mesh019: THREE.SkinnedMesh;
    Mesh019_1: THREE.SkinnedMesh;
    Mesh019_2: THREE.SkinnedMesh;
    Mesh019_3: THREE.SkinnedMesh;
    Mesh019_4: THREE.SkinnedMesh;
    Mesh019_5: THREE.SkinnedMesh;
    Mesh019_6: THREE.SkinnedMesh;
    Mesh019_7: THREE.SkinnedMesh;
    Mesh019_8: THREE.SkinnedMesh;
    Mesh019_9: THREE.SkinnedMesh;
    mixamorigHips: THREE.Bone;
  };
  materials: {
    Glasses: THREE.MeshStandardMaterial;
    Eyes: THREE.MeshStandardMaterial;
    Hair: THREE.MeshStandardMaterial;
    Skin: THREE.MeshStandardMaterial;
    Mouth: THREE.MeshStandardMaterial;
    Shirt: THREE.MeshStandardMaterial;
    Pants: THREE.MeshStandardMaterial;
    Shoes: THREE.MeshStandardMaterial;
    Sole: THREE.MeshStandardMaterial;
    Laces: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ActionName =
  | "Idle"
  | "GuitarPlaying"
  | "Running"
  | "SalsaDancing"
  | "TPose";
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}
// type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

export default function Woman(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    "./models/woman.gltf"
  ) as GLTFResult;

  const { setAnimations, animationIndex } = useCharacterAnimations();
  const { actions, names } = useAnimations(animations, group);

  useEffect(() => {
    setAnimations(names);
  }, [names, setAnimations]);

  useEffect(() => {
    actions[names[animationIndex]]!.reset().fadeIn(0.5).play();
    return () => {
      actions[names[animationIndex]]!.fadeOut(0.5);
    };
  }, [actions, animationIndex, names]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <group name="SM_Chr_Developer_Female_02">
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019"
              geometry={nodes.Mesh019.geometry}
              material={materials.Glasses}
              skeleton={nodes.Mesh019.skeleton}
              morphTargetDictionary={nodes.Mesh019.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019_1"
              geometry={nodes.Mesh019_1.geometry}
              material={materials.Eyes}
              skeleton={nodes.Mesh019_1.skeleton}
              morphTargetDictionary={nodes.Mesh019_1.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019_1.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019_2"
              geometry={nodes.Mesh019_2.geometry}
              material={materials.Hair}
              skeleton={nodes.Mesh019_2.skeleton}
              morphTargetDictionary={nodes.Mesh019_2.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019_2.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019_3"
              geometry={nodes.Mesh019_3.geometry}
              material={materials.Skin}
              skeleton={nodes.Mesh019_3.skeleton}
              morphTargetDictionary={nodes.Mesh019_3.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019_3.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019_4"
              geometry={nodes.Mesh019_4.geometry}
              material={materials.Mouth}
              skeleton={nodes.Mesh019_4.skeleton}
              morphTargetDictionary={nodes.Mesh019_4.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019_4.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019_5"
              geometry={nodes.Mesh019_5.geometry}
              material={materials.Shirt}
              skeleton={nodes.Mesh019_5.skeleton}
              morphTargetDictionary={nodes.Mesh019_5.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019_5.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019_6"
              geometry={nodes.Mesh019_6.geometry}
              material={materials.Pants}
              skeleton={nodes.Mesh019_6.skeleton}
              morphTargetDictionary={nodes.Mesh019_6.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019_6.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019_7"
              geometry={nodes.Mesh019_7.geometry}
              material={materials.Shoes}
              skeleton={nodes.Mesh019_7.skeleton}
              morphTargetDictionary={nodes.Mesh019_7.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019_7.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019_8"
              geometry={nodes.Mesh019_8.geometry}
              material={materials.Sole}
              skeleton={nodes.Mesh019_8.skeleton}
              morphTargetDictionary={nodes.Mesh019_8.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019_8.morphTargetInfluences}
            />
            <skinnedMesh
              frustumCulled={false}
              castShadow
              name="Mesh019_9"
              geometry={nodes.Mesh019_9.geometry}
              material={materials.Laces}
              skeleton={nodes.Mesh019_9.skeleton}
              morphTargetDictionary={nodes.Mesh019_9.morphTargetDictionary}
              morphTargetInfluences={nodes.Mesh019_9.morphTargetInfluences}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./models/woman.gltf");
